import lvsfunc
import vapoursynth as vs
from .placebo import shader as shader
from .sharp import z4usm as z4usm
from typing import Any, Callable, Dict, List, Optional, Union

core: Any

def nnedi3cl_double(clip: vs.VideoNode, scaler: lvsfunc.kernels.Kernel=..., correct_shift: bool=..., use_znedi: bool=..., **nnedi3_args: Any) -> vs.VideoNode: ...
def nnedi3_upscale(clip: vs.VideoNode, scaler: lvsfunc.kernels.Kernel=..., correct_shift: bool=..., use_znedi: bool=..., **nnedi3_args: Any) -> vs.VideoNode: ...
def eedi3_upscale(clip: vs.VideoNode, scaler: lvsfunc.kernels.Kernel=..., correct_shift: bool=..., nnedi3_args: Optional[Dict[str, Any]]=..., eedi3_args: Optional[Dict[str, Any]]=...) -> vs.VideoNode: ...
def fsrcnnx_upscale(clip: vs.VideoNode, width: int=..., height: int=..., shader_file: str=..., downscaler: Callable[[vs.VideoNode, int, int], vs.VideoNode]=..., upscaled_smooth: Optional[vs.VideoNode]=..., strength: float=..., profile: str=..., lmode: int=..., overshoot: float=..., undershoot: float=..., sharpener: Callable[[vs.VideoNode], vs.VideoNode]=...) -> vs.VideoNode: ...
def to_444(clip: vs.VideoNode, width: int=..., height: int=..., join_planes: bool=..., znedi: bool=..., scaler: lvsfunc.kernels.Kernel=...) -> Union[vs.VideoNode, List[vs.VideoNode]]: ...
